services:
  server-dev:
    profiles: ['dev']
    build:
      context: .
      dockerfile: server/docker/dockerfile.dev
    volumes:
      - ./server/src:/app/src
      - ./server/package.json:/app/package.json
      - ./server/nodemon.json:/app/nodemon.json
    ports:
      - '3000:3000'
    env_file:
      - server/.env
    depends_on:
      - redis
    restart: unless-stopped
  server-prod:
    profiles: ['prod']
    build:
      context: .
      dockerfile: server/docker/dockerfile.prod
    volumes:
      - ./server/src:/app/src
    ports:
      - '3000:3000'
    env_file:
      - server/.env
    restart: unless-stopped
  vue-app-dev-client:
    profiles: ['dev']
    build:
      context: .
      dockerfile: ui/docker/dockerfile.dev
    volumes:
      - ./ui/src:/app/src
      - ./ui/index.ts:/app/index.ts
      - ./ui/package.json:/app/package.json
      - ./ui/public:/app/public
    ports:
      - 3001:3001
    tty: true
    stdin_open: true
    env_file:
      - ui/.env
  redis:
    profiles: ['prod', 'dev']
    image: redis:latest
    ports:
      - '6379:6379'
    volumes:
      - redis_data:/data
    command: ['redis-server', '--appendonly', 'yes']
    restart: always
  worker:
    profiles: ['prod', 'dev']
    build:
      context: .
      dockerfile: worker/docker/dockerfile.dev
    volumes:
      - ./worker/src:/app/src
    env_file:
      - worker/.env
    depends_on:
      - redis
    restart: always

volumes:
  redis_data:
